/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
	ResourceManager,
	ResourceManagerInterface,
} from "./ResourceManager";

const _abi = [
	{
		inputs: [
			{
				internalType: "address",
				name: "owner",
				type: "address",
			},
		],
		stateMutability: "nonpayable",
		type: "constructor",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				indexed: false,
				internalType: "bytes",
				name: "cid",
				type: "bytes",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "size",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "expiration",
				type: "uint256",
			},
		],
		name: "Insert",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "previousOwner",
				type: "address",
			},
			{
				indexed: true,
				internalType: "address",
				name: "newOwner",
				type: "address",
			},
		],
		name: "OwnershipTransferred",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				indexed: false,
				internalType: "bytes",
				name: "cid",
				type: "bytes",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "size",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "expiration",
				type: "uint256",
			},
		],
		name: "Remove",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "bytes2",
				name: "gId",
				type: "bytes2",
			},
			{
				indexed: true,
				internalType: "bytes2",
				name: "serviceId",
				type: "bytes2",
			},
			{
				indexed: true,
				internalType: "bytes28",
				name: "uuid",
				type: "bytes28",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "expiration",
				type: "uint256",
			},
		],
		name: "SyncStorage",
		type: "event",
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				indexed: false,
				internalType: "bytes",
				name: "cid",
				type: "bytes",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "originalSize",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "size",
				type: "uint256",
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "expiration",
				type: "uint256",
			},
		],
		name: "Update",
		type: "event",
	},
	{
		inputs: [],
		name: "accountLength",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "index",
				type: "uint256",
			},
		],
		name: "balanceAt",
		outputs: [
			{
				components: [
					{
						internalType: "bytes32",
						name: "to",
						type: "bytes32",
					},
					{
						internalType: "uint256",
						name: "total",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "cost",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expiration",
						type: "uint256",
					},
				],
				internalType: "struct EnumerableBalance.Balance",
				name: "balance",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				internalType: "uint256",
				name: "index",
				type: "uint256",
			},
		],
		name: "cidAt",
		outputs: [
			{
				components: [
					{
						internalType: "uint256",
						name: "size",
						type: "uint256",
					},
					{
						internalType: "bytes",
						name: "data",
						type: "bytes",
					},
				],
				internalType: "struct EnumerableCID.CID",
				name: "cid",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				internalType: "bytes",
				name: "cid",
				type: "bytes",
			},
		],
		name: "cidExists",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes",
				name: "cid",
				type: "bytes",
			},
		],
		name: "cidKey",
		outputs: [
			{
				internalType: "bytes32",
				name: "",
				type: "bytes32",
			},
		],
		stateMutability: "pure",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
		],
		name: "cidLength",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
		],
		name: "cost",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
		],
		name: "expiration",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
		],
		name: "exsits",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "offset",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "limit",
				type: "uint256",
			},
		],
		name: "getBalances",
		outputs: [
			{
				components: [
					{
						internalType: "bytes32",
						name: "to",
						type: "bytes32",
					},
					{
						internalType: "uint256",
						name: "total",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "cost",
						type: "uint256",
					},
					{
						internalType: "uint256",
						name: "expiration",
						type: "uint256",
					},
				],
				internalType: "struct EnumerableBalance.Balance[]",
				name: "balances_",
				type: "tuple[]",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				internalType: "bytes",
				name: "cid",
				type: "bytes",
			},
		],
		name: "getCID",
		outputs: [
			{
				components: [
					{
						internalType: "uint256",
						name: "size",
						type: "uint256",
					},
					{
						internalType: "bytes",
						name: "data",
						type: "bytes",
					},
				],
				internalType: "struct EnumerableCID.CID",
				name: "",
				type: "tuple",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				internalType: "uint256",
				name: "offset",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "limit",
				type: "uint256",
			},
		],
		name: "getCIDs",
		outputs: [
			{
				components: [
					{
						internalType: "uint256",
						name: "size",
						type: "uint256",
					},
					{
						internalType: "bytes",
						name: "data",
						type: "bytes",
					},
				],
				internalType: "struct EnumerableCID.CID[]",
				name: "cids",
				type: "tuple[]",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes2",
				name: "gId",
				type: "bytes2",
			},
			{
				internalType: "bytes2",
				name: "serviceId",
				type: "bytes2",
			},
			{
				internalType: "bytes28",
				name: "uuid",
				type: "bytes28",
			},
		],
		name: "guid",
		outputs: [
			{
				internalType: "bytes32",
				name: "",
				type: "bytes32",
			},
		],
		stateMutability: "pure",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				internalType: "bytes",
				name: "cid",
				type: "bytes",
			},
			{
				internalType: "uint256",
				name: "size",
				type: "uint256",
			},
		],
		name: "insert",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
		],
		name: "left",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [],
		name: "owner",
		outputs: [
			{
				internalType: "address",
				name: "",
				type: "address",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "permitter",
				type: "address",
			},
			{
				internalType: "bool",
				name: "isPermit",
				type: "bool",
			},
		],
		name: "permit",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "pinManager",
				type: "address",
			},
			{
				internalType: "bool",
				name: "isPermit",
				type: "bool",
			},
		],
		name: "permitPin",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address",
			},
		],
		name: "permits",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address",
			},
		],
		name: "permittedPinManagers",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				internalType: "bytes",
				name: "cid",
				type: "bytes",
			},
		],
		name: "remove",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [],
		name: "renounceOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes2",
				name: "gId",
				type: "bytes2",
			},
			{
				internalType: "bytes2",
				name: "serviceId",
				type: "bytes2",
			},
			{
				internalType: "bytes28",
				name: "uuid",
				type: "bytes28",
			},
			{
				internalType: "uint256",
				name: "amount",
				type: "uint256",
			},
			{
				internalType: "uint256",
				name: "expiration_",
				type: "uint256",
			},
		],
		name: "syncStorage",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
		],
		name: "total",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256",
			},
		],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "newOwner",
				type: "address",
			},
		],
		name: "transferOwnership",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "to",
				type: "bytes32",
			},
			{
				internalType: "bytes",
				name: "cid",
				type: "bytes",
			},
			{
				internalType: "uint256",
				name: "size",
				type: "uint256",
			},
		],
		name: "update",
		outputs: [],
		stateMutability: "nonpayable",
		type: "function",
	},
];

const _bytecode =
	"";

export class ResourceManager__factory extends ContractFactory {
	constructor(signer?: Signer) {
		super(_abi, _bytecode, signer);
	}

	deploy(
		owner: string,
		overrides?: Overrides & { from?: string | Promise<string> }
	): Promise<ResourceManager> {
		return super.deploy(owner, overrides || {}) as Promise<ResourceManager>;
	}
	getDeployTransaction(
		owner: string,
		overrides?: Overrides & { from?: string | Promise<string> }
	): TransactionRequest {
		return super.getDeployTransaction(owner, overrides || {});
	}
	attach(address: string): ResourceManager {
		return super.attach(address) as ResourceManager;
	}
	connect(signer: Signer): ResourceManager__factory {
		return super.connect(signer) as ResourceManager__factory;
	}
	static readonly bytecode = _bytecode;
	static readonly abi = _abi;
	static createInterface(): ResourceManagerInterface {
		return new utils.Interface(_abi) as ResourceManagerInterface;
	}
	static connect(
		address: string,
		signerOrProvider: Signer | Provider
	): ResourceManager {
		return new Contract(address, _abi, signerOrProvider) as ResourceManager;
	}
}
